<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  
        http://code.alibabatech.com/schema/dubbo  
        http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

	<!-- 服务方应用程序名等相关属性 -->
	<dubbo:application name="annotation-consumer" />
	
	<!-- 订阅服务时的订阅服务器地址及协议,超时时间 -->
	<dubbo:registry address="zookeeper://192.168.8.88:2181" timeout="150000"></dubbo:registry>
	
	<!-- 消费者推荐使用xml统一配置,配法见dubbo-web-xml-consumer项目,在代码使用方面统一使用@autowired而不时@Reference -->
	<!-- 扫描方式一 扫描注解包路径(带有Reference的属性,前提是所在类被spring容器扫描)，多个包用逗号分隔，不填pacakge表示扫描当前ApplicationContext中所有的类
	如果服务被controller引用，由于controller是在web第一次访问时，容器扫描springmvc.xml时注入的，所以需要通过将该文件放在springmvc.xml中扫描 -->
	<dubbo:annotation package="com.yu.dubbo.consumer.controller,com.yu.dubbo.consumer.localservice.impl" />
	
	<!-- 扫描方式二 与方式一等价 需要引入xmlns:context="http://www.springframework.org/schema/context" 命名空间，因为使用了spring的包扫描方式-->
<!-- 	<dubbo:annotation /> 
	<context:component-scan base-package="com.yu.dubbo.consumer.controller,com.yu.dubbo.consumer.localservice.impl"> 
		<context:include-filter type="annotation" expression="com.alibaba.dubbo.config.annotation.Reference" /> 
	</context:component-scan> -->

</beans>  